package org.langzhaozhi.common.graph;

/**
 * <p><图的边>：简称<边>，图的一条边定义为连接两个顶点并附带一个数值型权重值Weight(如距离、花费等数据含义)的对象</p>
 * <p>为应用方便，这里的Edge总是附属于两个顶点中的一个给定顶点的，这个给定顶点就是此边的"this"顶点，此"this"
 * 顶点相对于此Edge定义而言是隐含明确定义的，而此Edge另一端点的顶点被称为"other"顶点。</p>
 * <p>Edge用于一个给定顶点内部保存与其相关的一个方向的边，或创建一个顶点的时候同时指定一个方向的边，
 * 特别是在<严格单向图>的构造过程中，一般创建一个顶点时，其前向顶点已经创建好了，此时就通过Edge来表示从前向顶点到本
 * "this"顶点的边的信息</p>
 * <p>Edge上附带一个数值型数据之所以在这里被明确定义为"权重值"Weight，是因为图理论中确实也是以"权值"这个概念来表达两关联顶点之间数据关系的，
 * 当然,"权值"含义依赖于具体应用的解释，例如可以表示两城市之间真实距离，还可以表示活动的花费，等等，如"求解最短距离"中权重被解释为距离。
 * 总之在这里统统用"权值"来表示了。还有到底是表示"other"顶点到"this"顶点的权值还是反之的解释，也是具体应用来解释的，一般是前者的解释，或者无向图中两者等价的解释</p>
 * <p><code>getWeight()</code>定义了两个顶点之间的权值，具体的应用甚至可以允许负数的权重值</p>
 *
 * @param <A>
 */
public interface Edge<A, V extends Vertex<A>> {
    /**
     * 此边的另一个顶点，注意"this"顶点是隐含自明的，这里是指此边的另一个"other"顶点
     */
    public V getOtherVertex();

    /**
     * 边的权重值
     * @return 权重值
     */
    public double getWeight();
}
